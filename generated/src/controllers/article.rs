// @generated by via-core. DO NOT EDIT BY HAND.
// source: /Users/ndbroadbent/code/viaduct/app/resources/articles.via

use loco_rs::prelude::*;
use serde_json::json;

pub const RESPOND_WITH: &[&str] = &["html", "json"];

pub fn routes() -> Routes {
    Routes::new()
        .prefix("articles/")
        .add("/", get(index))
        .add("/{id}", get(show))
        .add("/", post(create))
        .add("/{id}", put(update))
        .add("/{id}", delete(destroy))
}

pub async fn index(State(_ctx): State<AppContext>) -> Result<Response> {
    format::json(json!({"todo": "Article#index"}))
}

pub async fn show(State(_ctx): State<AppContext>) -> Result<Response> {
    format::json(json!({"todo": "Article#show"}))
}

pub async fn create(State(_ctx): State<AppContext>) -> Result<Response> {
    format::json(json!({"todo": "Article#create"}))
}

pub async fn update(State(_ctx): State<AppContext>) -> Result<Response> {
    format::json(json!({"todo": "Article#update"}))
}

pub async fn destroy(State(_ctx): State<AppContext>) -> Result<Response> {
    format::json(json!({"todo": "Article#destroy"}))
}

// Associated model fields
// - title: String
// - body: Option<String>
// - published_at: Option<String> (ISO 8601 DateTime string; swap for chrono if desired)
// - hidden: bool
