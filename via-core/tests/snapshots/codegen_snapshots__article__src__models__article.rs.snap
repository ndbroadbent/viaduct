---
source: tests/codegen_snapshots.rs
expression: file.contents
---
// @generated by via-core. DO NOT EDIT BY HAND.
// source: tests/fixtures/article.via

use serde::{Deserialize, Serialize};

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct Article {
    pub title: String,
    #[serde(skip_serializing_if = "Option::is_none", default)]
    pub body: Option<String>,
    #[serde(skip_serializing_if = "Option::is_none", default)]
    pub published_at: Option<String>,
    pub author_name: String,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ArticleCreateParams {
    pub title: String,
    #[serde(skip_serializing_if = "Option::is_none", default)]
    pub body: Option<String>,
    /// ISO 8601 DateTime string; swap for chrono if desired
    #[serde(skip_serializing_if = "Option::is_none", default)]
    pub published_at: Option<String>,
    pub author_name: String,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ArticleUpdateParams {
    #[serde(skip_serializing_if = "Option::is_none", default)]
    pub title: Option<String>,
    #[serde(skip_serializing_if = "Option::is_none", default)]
    pub body: Option<String>,
    /// ISO 8601 DateTime string; swap for chrono if desired
    #[serde(skip_serializing_if = "Option::is_none", default)]
    pub published_at: Option<String>,
    #[serde(skip_serializing_if = "Option::is_none", default)]
    pub author_name: Option<String>,
}
